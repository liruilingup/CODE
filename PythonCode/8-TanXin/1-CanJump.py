'''55. 跳跃游戏'''
# 给定一个非负整数数组，你最初位于数组的第一个位置。
# 数组中的每个元素代表你在该位置可以跳跃的最大长度。
# 判断你是否能够到达最后一个位置。

'''解法'''
# 思路：尽可能到达最远位置（贪心）。如果能到达某个位置，那一定能到达它前面的所有位置。
# 方法：初始化最远位置为 0，然后遍历数组，如果当前位置能到达，并且当前位置+跳数>最远位置，就更新最远位置。最后比较最远位置和数组长度。

def canJump(nums):
    index = 0 # 初始化当前能到达最远的位置
    for i, jump in enumerate(nums):  # i为当前位置，jump是当前位置的跳数
        if index >= i and i + jump > index:  # 如果当前位置能到达，并且当前位置+跳数>最远位置
            index = i + jump  # 更新最远能到达位置

    return index >= i

print('结果：', canJump([2,3,1,1,4]))

